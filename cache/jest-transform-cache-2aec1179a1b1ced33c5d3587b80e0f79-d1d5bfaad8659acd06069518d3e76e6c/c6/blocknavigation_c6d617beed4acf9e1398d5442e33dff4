65e0a68104cf30620fea09d580ab1a09
var jumpToCode = function init() {
  var missingCoverageClasses = ['.cbranch-no', '.cstat-no', '.fstat-no'];
  var fileListingElements = ['td.pct.low'];
  var notSelector = ':not(' + missingCoverageClasses.join('):not(') + ') > ';
  var selector = fileListingElements.join(', ') + ', ' + notSelector + missingCoverageClasses.join(', ' + notSelector);
  var missingCoverageElements = document.querySelectorAll(selector);
  var currentIndex;

  function toggleClass(index) {
    missingCoverageElements.item(currentIndex).classList.remove('highlighted');
    missingCoverageElements.item(index).classList.add('highlighted');
  }

  function makeCurrent(index) {
    toggleClass(index);
    currentIndex = index;
    missingCoverageElements.item(index).scrollIntoView({
      behavior: 'smooth',
      block: 'center',
      inline: 'center'
    });
  }

  function goToPrevious() {
    var nextIndex = 0;

    if (typeof currentIndex !== 'number' || currentIndex === 0) {
      nextIndex = missingCoverageElements.length - 1;
    } else if (missingCoverageElements.length > 1) {
      nextIndex = currentIndex - 1;
    }

    makeCurrent(nextIndex);
  }

  function goToNext() {
    var nextIndex = 0;

    if (typeof currentIndex === 'number' && currentIndex < missingCoverageElements.length - 1) {
      nextIndex = currentIndex + 1;
    }

    makeCurrent(nextIndex);
  }

  return function jump(event) {
    if (document.getElementById('fileSearch') === document.activeElement && document.activeElement != null) {
      return;
    }

    switch (event.which) {
      case 78:
      case 74:
        goToNext();
        break;

      case 66:
      case 75:
      case 80:
        goToPrevious();
        break;
    }
  };
}();

window.addEventListener('keydown', jumpToCode);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsb2NrLW5hdmlnYXRpb24uanMiXSwibmFtZXMiOlsianVtcFRvQ29kZSIsImluaXQiLCJtaXNzaW5nQ292ZXJhZ2VDbGFzc2VzIiwiZmlsZUxpc3RpbmdFbGVtZW50cyIsIm5vdFNlbGVjdG9yIiwiam9pbiIsInNlbGVjdG9yIiwibWlzc2luZ0NvdmVyYWdlRWxlbWVudHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjdXJyZW50SW5kZXgiLCJ0b2dnbGVDbGFzcyIsImluZGV4IiwiaXRlbSIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsIm1ha2VDdXJyZW50Iiwic2Nyb2xsSW50b1ZpZXciLCJiZWhhdmlvciIsImJsb2NrIiwiaW5saW5lIiwiZ29Ub1ByZXZpb3VzIiwibmV4dEluZGV4IiwibGVuZ3RoIiwiZ29Ub05leHQiLCJqdW1wIiwiZXZlbnQiLCJnZXRFbGVtZW50QnlJZCIsImFjdGl2ZUVsZW1lbnQiLCJ3aGljaCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiJBQUNBLElBQUlBLFVBQVUsR0FBSSxTQUFTQyxJQUFULEdBQWdCO0FBRTlCLE1BQUlDLHNCQUFzQixHQUFHLENBQUMsYUFBRCxFQUFnQixXQUFoQixFQUE2QixXQUE3QixDQUE3QjtBQUdBLE1BQUlDLG1CQUFtQixHQUFHLENBQUMsWUFBRCxDQUExQjtBQUdBLE1BQUlDLFdBQVcsR0FBRyxVQUFVRixzQkFBc0IsQ0FBQ0csSUFBdkIsQ0FBNEIsUUFBNUIsQ0FBVixHQUFrRCxNQUFwRTtBQUdBLE1BQUlDLFFBQVEsR0FDUkgsbUJBQW1CLENBQUNFLElBQXBCLENBQXlCLElBQXpCLElBQ0EsSUFEQSxHQUVBRCxXQUZBLEdBR0FGLHNCQUFzQixDQUFDRyxJQUF2QixDQUE0QixPQUFPRCxXQUFuQyxDQUpKO0FBT0EsTUFBSUcsdUJBQXVCLEdBQUdDLFFBQVEsQ0FBQ0MsZ0JBQVQsQ0FBMEJILFFBQTFCLENBQTlCO0FBRUEsTUFBSUksWUFBSjs7QUFFQSxXQUFTQyxXQUFULENBQXFCQyxLQUFyQixFQUE0QjtBQUN4QkwsSUFBQUEsdUJBQXVCLENBQ2xCTSxJQURMLENBQ1VILFlBRFYsRUFFS0ksU0FGTCxDQUVlQyxNQUZmLENBRXNCLGFBRnRCO0FBR0FSLElBQUFBLHVCQUF1QixDQUFDTSxJQUF4QixDQUE2QkQsS0FBN0IsRUFBb0NFLFNBQXBDLENBQThDRSxHQUE5QyxDQUFrRCxhQUFsRDtBQUNIOztBQUVELFdBQVNDLFdBQVQsQ0FBcUJMLEtBQXJCLEVBQTRCO0FBQ3hCRCxJQUFBQSxXQUFXLENBQUNDLEtBQUQsQ0FBWDtBQUNBRixJQUFBQSxZQUFZLEdBQUdFLEtBQWY7QUFDQUwsSUFBQUEsdUJBQXVCLENBQUNNLElBQXhCLENBQTZCRCxLQUE3QixFQUFvQ00sY0FBcEMsQ0FBbUQ7QUFDL0NDLE1BQUFBLFFBQVEsRUFBRSxRQURxQztBQUUvQ0MsTUFBQUEsS0FBSyxFQUFFLFFBRndDO0FBRy9DQyxNQUFBQSxNQUFNLEVBQUU7QUFIdUMsS0FBbkQ7QUFLSDs7QUFFRCxXQUFTQyxZQUFULEdBQXdCO0FBQ3BCLFFBQUlDLFNBQVMsR0FBRyxDQUFoQjs7QUFDQSxRQUFJLE9BQU9iLFlBQVAsS0FBd0IsUUFBeEIsSUFBb0NBLFlBQVksS0FBSyxDQUF6RCxFQUE0RDtBQUN4RGEsTUFBQUEsU0FBUyxHQUFHaEIsdUJBQXVCLENBQUNpQixNQUF4QixHQUFpQyxDQUE3QztBQUNILEtBRkQsTUFFTyxJQUFJakIsdUJBQXVCLENBQUNpQixNQUF4QixHQUFpQyxDQUFyQyxFQUF3QztBQUMzQ0QsTUFBQUEsU0FBUyxHQUFHYixZQUFZLEdBQUcsQ0FBM0I7QUFDSDs7QUFFRE8sSUFBQUEsV0FBVyxDQUFDTSxTQUFELENBQVg7QUFDSDs7QUFFRCxXQUFTRSxRQUFULEdBQW9CO0FBQ2hCLFFBQUlGLFNBQVMsR0FBRyxDQUFoQjs7QUFFQSxRQUNJLE9BQU9iLFlBQVAsS0FBd0IsUUFBeEIsSUFDQUEsWUFBWSxHQUFHSCx1QkFBdUIsQ0FBQ2lCLE1BQXhCLEdBQWlDLENBRnBELEVBR0U7QUFDRUQsTUFBQUEsU0FBUyxHQUFHYixZQUFZLEdBQUcsQ0FBM0I7QUFDSDs7QUFFRE8sSUFBQUEsV0FBVyxDQUFDTSxTQUFELENBQVg7QUFDSDs7QUFFRCxTQUFPLFNBQVNHLElBQVQsQ0FBY0MsS0FBZCxFQUFxQjtBQUN4QixRQUNJbkIsUUFBUSxDQUFDb0IsY0FBVCxDQUF3QixZQUF4QixNQUEwQ3BCLFFBQVEsQ0FBQ3FCLGFBQW5ELElBQ0FyQixRQUFRLENBQUNxQixhQUFULElBQTBCLElBRjlCLEVBR0U7QUFFRTtBQUNIOztBQUVELFlBQVFGLEtBQUssQ0FBQ0csS0FBZDtBQUNJLFdBQUssRUFBTDtBQUNBLFdBQUssRUFBTDtBQUNJTCxRQUFBQSxRQUFRO0FBQ1I7O0FBQ0osV0FBSyxFQUFMO0FBQ0EsV0FBSyxFQUFMO0FBQ0EsV0FBSyxFQUFMO0FBQ0lILFFBQUFBLFlBQVk7QUFDWjtBQVRSO0FBV0gsR0FwQkQ7QUFxQkgsQ0FwRmdCLEVBQWpCOztBQXFGQVMsTUFBTSxDQUFDQyxnQkFBUCxDQUF3QixTQUF4QixFQUFtQ2hDLFVBQW5DIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbnZhciBqdW1wVG9Db2RlID0gKGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgLy8gQ2xhc3NlcyBvZiBjb2RlIHdlIHdvdWxkIGxpa2UgdG8gaGlnaGxpZ2h0IGluIHRoZSBmaWxlIHZpZXdcbiAgICB2YXIgbWlzc2luZ0NvdmVyYWdlQ2xhc3NlcyA9IFsnLmNicmFuY2gtbm8nLCAnLmNzdGF0LW5vJywgJy5mc3RhdC1ubyddO1xuXG4gICAgLy8gRWxlbWVudHMgdG8gaGlnaGxpZ2h0IGluIHRoZSBmaWxlIGxpc3Rpbmcgdmlld1xuICAgIHZhciBmaWxlTGlzdGluZ0VsZW1lbnRzID0gWyd0ZC5wY3QubG93J107XG5cbiAgICAvLyBXZSBkb24ndCB3YW50IHRvIHNlbGVjdCBlbGVtZW50cyB0aGF0IGFyZSBkaXJlY3QgZGVzY2VuZGFudHMgb2YgYW5vdGhlciBtYXRjaFxuICAgIHZhciBub3RTZWxlY3RvciA9ICc6bm90KCcgKyBtaXNzaW5nQ292ZXJhZ2VDbGFzc2VzLmpvaW4oJyk6bm90KCcpICsgJykgPiAnOyAvLyBiZWNvbWVzIGA6bm90KGEpOm5vdChiKSA+IGBcblxuICAgIC8vIFNlbGVjdGVyIHRoYXQgZmluZHMgZWxlbWVudHMgb24gdGhlIHBhZ2UgdG8gd2hpY2ggd2UgY2FuIGp1bXBcbiAgICB2YXIgc2VsZWN0b3IgPVxuICAgICAgICBmaWxlTGlzdGluZ0VsZW1lbnRzLmpvaW4oJywgJykgK1xuICAgICAgICAnLCAnICtcbiAgICAgICAgbm90U2VsZWN0b3IgK1xuICAgICAgICBtaXNzaW5nQ292ZXJhZ2VDbGFzc2VzLmpvaW4oJywgJyArIG5vdFNlbGVjdG9yKTsgLy8gYmVjb21lcyBgOm5vdChhKTpub3QoYikgPiBhLCA6bm90KGEpOm5vdChiKSA+IGJgXG5cbiAgICAvLyBUaGUgTm9kZUxpc3Qgb2YgbWF0Y2hpbmcgZWxlbWVudHNcbiAgICB2YXIgbWlzc2luZ0NvdmVyYWdlRWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKTtcblxuICAgIHZhciBjdXJyZW50SW5kZXg7XG5cbiAgICBmdW5jdGlvbiB0b2dnbGVDbGFzcyhpbmRleCkge1xuICAgICAgICBtaXNzaW5nQ292ZXJhZ2VFbGVtZW50c1xuICAgICAgICAgICAgLml0ZW0oY3VycmVudEluZGV4KVxuICAgICAgICAgICAgLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZ2hsaWdodGVkJyk7XG4gICAgICAgIG1pc3NpbmdDb3ZlcmFnZUVsZW1lbnRzLml0ZW0oaW5kZXgpLmNsYXNzTGlzdC5hZGQoJ2hpZ2hsaWdodGVkJyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gbWFrZUN1cnJlbnQoaW5kZXgpIHtcbiAgICAgICAgdG9nZ2xlQ2xhc3MoaW5kZXgpO1xuICAgICAgICBjdXJyZW50SW5kZXggPSBpbmRleDtcbiAgICAgICAgbWlzc2luZ0NvdmVyYWdlRWxlbWVudHMuaXRlbShpbmRleCkuc2Nyb2xsSW50b1ZpZXcoe1xuICAgICAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnLFxuICAgICAgICAgICAgYmxvY2s6ICdjZW50ZXInLFxuICAgICAgICAgICAgaW5saW5lOiAnY2VudGVyJ1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnb1RvUHJldmlvdXMoKSB7XG4gICAgICAgIHZhciBuZXh0SW5kZXggPSAwO1xuICAgICAgICBpZiAodHlwZW9mIGN1cnJlbnRJbmRleCAhPT0gJ251bWJlcicgfHwgY3VycmVudEluZGV4ID09PSAwKSB7XG4gICAgICAgICAgICBuZXh0SW5kZXggPSBtaXNzaW5nQ292ZXJhZ2VFbGVtZW50cy5sZW5ndGggLSAxO1xuICAgICAgICB9IGVsc2UgaWYgKG1pc3NpbmdDb3ZlcmFnZUVsZW1lbnRzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgIG5leHRJbmRleCA9IGN1cnJlbnRJbmRleCAtIDE7XG4gICAgICAgIH1cblxuICAgICAgICBtYWtlQ3VycmVudChuZXh0SW5kZXgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdvVG9OZXh0KCkge1xuICAgICAgICB2YXIgbmV4dEluZGV4ID0gMDtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICB0eXBlb2YgY3VycmVudEluZGV4ID09PSAnbnVtYmVyJyAmJlxuICAgICAgICAgICAgY3VycmVudEluZGV4IDwgbWlzc2luZ0NvdmVyYWdlRWxlbWVudHMubGVuZ3RoIC0gMVxuICAgICAgICApIHtcbiAgICAgICAgICAgIG5leHRJbmRleCA9IGN1cnJlbnRJbmRleCArIDE7XG4gICAgICAgIH1cblxuICAgICAgICBtYWtlQ3VycmVudChuZXh0SW5kZXgpO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiBqdW1wKGV2ZW50KSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmaWxlU2VhcmNoJykgPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiZcbiAgICAgICAgICAgIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT0gbnVsbFxuICAgICAgICApIHtcbiAgICAgICAgICAgIC8vIGlmIHdlJ3JlIGN1cnJlbnRseSBmb2N1c2VkIG9uIHRoZSBzZWFyY2ggaW5wdXQsIHdlIGRvbid0IHdhbnQgdG8gbmF2aWdhdGVcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXRjaCAoZXZlbnQud2hpY2gpIHtcbiAgICAgICAgICAgIGNhc2UgNzg6IC8vIG5cbiAgICAgICAgICAgIGNhc2UgNzQ6IC8vIGpcbiAgICAgICAgICAgICAgICBnb1RvTmV4dCgpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSA2NjogLy8gYlxuICAgICAgICAgICAgY2FzZSA3NTogLy8ga1xuICAgICAgICAgICAgY2FzZSA4MDogLy8gcFxuICAgICAgICAgICAgICAgIGdvVG9QcmV2aW91cygpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfTtcbn0pKCk7XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGp1bXBUb0NvZGUpO1xuIl19